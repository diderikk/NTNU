---
swagger: "2.0"
info:
  description: The REST API for the GIDD application
  version: 1.0-SNAPSHOT
  title: GIDD REST API
host: localhost:8080
basePath: "/api/v1"
tags:
  - name: activity-controller
    description: Activity Controller
  - name: chat-controller
    description: Chat Controller
  - name: user-controller
    description: User Controller
paths:
  "/activities":
    get:
      tags:
        - activity-controller
      summary: getActivities
      operationId: getActivitiesUsingGET
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ActivityDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - activity-controller
      summary: createActivity
      operationId: createActivityUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: activity
          description: activity
          required: true
          schema:
            "$ref": "#/definitions/ActivityRegistrationDTO"
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ActivityDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/activities/alternatives":
    post:
      tags:
        - activity-controller
      summary: getActivitiesWithFilterAndSorting
      operationId: getActivitiesWithFilterAndSortingUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: filter
          description: filter
          required: true
          schema:
            "$ref": "#/definitions/SortFilterQueryDTO"
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ActivityDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/activities/{activity_id}":
    get:
      tags:
        - activity-controller
      summary: getActivity
      operationId: getActivityUsingGET
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ActivityDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
        - activity-controller
      summary: editActivity
      operationId: editActivityUsingPUT
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
        - in: body
          name: activityRegDTO
          description: activityRegDTO
          required: true
          schema:
            "$ref": "#/definitions/ActivityRegistrationDTO"
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ActivityDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
        - activity-controller
      summary: deleteActivity
      operationId: deleteActivityUsingDELETE
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/activities/{activity_id}/absences":
    post:
      tags:
        - activity-controller
      summary: editAbsence
      operationId: editAbsenceUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: absenceDTO
          description: absenceDTO
          required: true
          schema:
            "$ref": "#/definitions/AbsenceDTO"
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: array
            uniqueItems: true
            items:
              type: integer
              format: int64
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/activities/{activity_id}/chat":
    get:
      tags:
        - activity-controller
      summary: getActivityChat
      operationId: getActivityChatUsingGET
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/Chat"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/activities/{activity_id}/organizer/{user_id}":
    get:
      tags:
        - activity-controller
      summary: isOrganizerOfActivity
      operationId: isOrganizerOfActivityUsingGET
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/activities/{activity_id}/users":
    get:
      tags:
        - activity-controller
      summary: getUsersOfActivity
      operationId: getUsersOfActivityUsingGET
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/UserNameDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/activities/{activity_id}/users/{user_id}":
    get:
      tags:
        - activity-controller
      summary: isUserParticipantOfActivity
      operationId: isUserParticipantOfActivityUsingGET
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - activity-controller
      summary: addUserToActivity
      operationId: addUserToActivityUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/UserDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/chats":
    get:
      tags:
        - chat-controller
      summary: getChats
      operationId: getChatsUsingGET
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Chat"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - chat-controller
      summary: createChat
      operationId: createChatUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: chat
          description: chat
          required: true
          schema:
            "$ref": "#/definitions/Chat"
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/Chat"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/chats/{chat_id}":
    get:
      tags:
        - chat-controller
      summary: getChat
      operationId: getChatUsingGET
      produces:
        - "*/*"
      parameters:
        - name: chat_id
          in: path
          description: chat_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/Chat"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
        - chat-controller
      summary: updateChat
      operationId: updateChatUsingPUT
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: chat
          description: chat
          required: true
          schema:
            "$ref": "#/definitions/Chat"
        - name: chat_id
          in: path
          description: chat_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/Chat"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
        - chat-controller
      summary: deleteChat
      operationId: deleteChatUsingDELETE
      produces:
        - "*/*"
      parameters:
        - name: chat_id
          in: path
          description: chat_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/chats/{chat_id}/messages":
    get:
      tags:
        - chat-controller
      summary: getMessages
      operationId: getMessagesUsingGET
      produces:
        - "*/*"
      parameters:
        - name: chat_id
          in: path
          description: chat_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/MessageDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - chat-controller
      summary: createMessage
      operationId: createMessageUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: chat_id
          in: path
          description: chat_id
          required: true
          type: integer
          format: int64
        - in: body
          name: message
          description: message
          required: true
          schema:
            "$ref": "#/definitions/Message"
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/Message"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/users":
    post:
      tags:
        - user-controller
      summary: createUser
      operationId: createUserUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            "$ref": "#/definitions/UserWithPasswordDTO"
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/UserRegistrationCallbackDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/users/{user_id}":
    get:
      tags:
        - user-controller
      summary: getUser
      operationId: getUserUsingGET
      produces:
        - "*/*"
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/UserDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - user-controller
      summary: editUser
      operationId: editUserUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
        - in: body
          name: userEditDTO
          description: userEditDTO
          required: true
          schema:
            "$ref": "#/definitions/UserEditDTO"
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/UserDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
        - user-controller
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      produces:
        - "*/*"
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/users/{user_id}/activities":
    get:
      tags:
        - user-controller
      summary: getUserActivities
      operationId: getUserActivitiesUsingGET
      produces:
        - "*/*"
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: array
            uniqueItems: true
            items:
              "$ref": "#/definitions/Activity"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/users/{user_id}/activities/{activity_id}":
    delete:
      tags:
        - user-controller
      summary: removeUserFromActivity
      operationId: removeUserFromActivityUsingDELETE
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/users/{user_id}/my-activities":
    get:
      tags:
        - user-controller
      summary: getFutureActivities
      operationId: getFutureActivitiesUsingGET
      produces:
        - "*/*"
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Activity"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/users/{user_id}/organized-activities":
    get:
      tags:
        - user-controller
      summary: getOrganizedActivities
      operationId: getOrganizedActivitiesUsingGET
      produces:
        - "*/*"
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Activity"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
definitions:
  AbsenceDTO:
    type: object
    properties:
      absentUsersId:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int64
    title: AbsenceDTO
  Activity:
    type: object
    properties:
      activityId:
        type: integer
        format: int64
      activityPicture:
        type: string
        format: byte
      city:
        type: string
      description:
        type: string
      difficulty:
        type: integer
        format: int32
      durationMinutes:
        type: integer
        format: int32
      equipment:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      markedAbsence:
        type: boolean
      maxParticipants:
        type: integer
        format: int32
      place:
        type: string
      privateActivity:
        type: boolean
      startTime:
        type: string
        format: date-time
      title:
        type: string
      type:
        type: string
    title: Activity
  ActivityDTO:
    type: object
    properties:
      activityId:
        type: integer
        format: int64
      activityPicture:
        type: string
      chatId:
        type: integer
        format: int64
      city:
        type: string
      description:
        type: string
      difficulty:
        type: integer
        format: int32
      durationMinutes:
        type: integer
        format: int32
      equipment:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      maxParticipants:
        type: integer
        format: int32
      organizerForename:
        type: string
      organizerId:
        type: integer
        format: int64
      organizerSurname:
        type: string
      place:
        type: string
      privateActivity:
        type: boolean
      startTime:
        type: string
        format: date-time
      title:
        type: string
      type:
        type: string
    title: ActivityDTO
  ActivityRegistrationDTO:
    type: object
    properties:
      activityPicture:
        type: string
      city:
        type: string
      description:
        type: string
      difficulty:
        type: integer
        format: int32
      durationMinutes:
        type: integer
        format: int32
      equipment:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      maxParticipants:
        type: integer
        format: int32
      place:
        type: string
      privateActivity:
        type: boolean
      startTime:
        type: string
        format: date-time
      title:
        type: string
      type:
        type: string
    title: ActivityRegistrationDTO
  Chat:
    type: object
    properties:
      chatId:
        type: integer
        format: int64
      messages:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Message"
    title: Chat
  Message:
    type: object
    properties:
      chat:
        "$ref": "#/definitions/Chat"
      message:
        type: string
      messageId:
        type: integer
        format: int64
      timeSent:
        type: string
        format: date-time
      user:
        "$ref": "#/definitions/User"
    title: Message
  MessageDTO:
    type: object
    properties:
      chatId:
        type: integer
        format: int64
      forename:
        type: string
      message:
        type: string
      time:
        type: string
        format: date-time
      userId:
        type: integer
        format: int64
    title: MessageDTO
  Report:
    type: object
    properties:
      description:
        type: string
      reportId:
        type: integer
        format: int64
      reportWriter:
        "$ref": "#/definitions/User"
      reportedUser:
        "$ref": "#/definitions/User"
    title: Report
  SortFilterQueryDTO:
    type: object
    properties:
      amount:
        type: integer
        format: int32
      difficulty:
        type: integer
        format: int32
      searchQuery:
        type: string
      sortingType:
        type: string
        enum:
          - DATE
          - DISTANCE
          - NONE
          - PARTICIPANT_AMOUNT
      userLatitude:
        type: number
        format: double
      userLongitude:
        type: number
        format: double
    title: SortFilterQueryDTO
  User:
    type: object
    properties:
      absence:
        type: integer
        format: int32
      activities:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Activity"
      dateOfBirth:
        type: string
        format: date
      email:
        type: string
      forename:
        type: string
      hash:
        type: string
      messages:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Message"
      organizedActivities:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Activity"
      profilePicture:
        type: string
        format: byte
      rating:
        type: integer
        format: int32
      reportsReceived:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Report"
      reportsSent:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Report"
      role:
        type: string
      salt:
        type: string
      surname:
        type: string
      trainingLevel:
        type: string
        enum:
          - EASY
          - HARD
          - MEDIUM
      userId:
        type: integer
        format: int64
    title: User
  UserDTO:
    type: object
    properties:
      dateOfBirth:
        type: string
        format: date
      email:
        type: string
      forename:
        type: string
      profilePicture:
        type: string
      role:
        type: string
      surname:
        type: string
      trainingLevel:
        type: string
        enum:
          - EASY
          - HARD
          - MEDIUM
      trusted:
        type: boolean
      userId:
        type: integer
        format: int64
    title: UserDTO
  UserEditDTO:
    type: object
    properties:
      dateOfBirth:
        type: string
        format: date
      email:
        type: string
      forename:
        type: string
      newPassword:
        type: string
      oldPassword:
        type: string
      profilePicture:
        type: string
      surname:
        type: string
      trainingLevel:
        type: string
        enum:
          - EASY
          - HARD
          - MEDIUM
    title: UserEditDTO
  UserNameDTO:
    type: object
    properties:
      forename:
        type: string
      surname:
        type: string
      userId:
        type: integer
        format: int64
    title: UserNameDTO
  UserRegistrationCallbackDTO:
    type: object
    properties:
      token:
        type: string
      user:
        "$ref": "#/definitions/UserDTO"
    title: UserRegistrationCallbackDTO
  UserWithPasswordDTO:
    type: object
    properties:
      dateOfBirth:
        type: string
        format: date
      email:
        type: string
      forename:
        type: string
      password:
        type: string
      profilePicture:
        type: string
      surname:
        type: string
      trainingLevel:
        type: string
        enum:
          - EASY
          - HARD
          - MEDIUM
    title: UserWithPasswordDTO
